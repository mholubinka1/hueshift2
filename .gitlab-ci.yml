#gitlab-ci script for a gitlab-runner (armhf architecture) configured on Raspbian Buster 32-bit 

variables:
  DOCKER_TLS_CERTDIR: "/certs"

before_script:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin "$DOCKER_REGISTRY"
  - IMAGE_TAG=$(if [ $CI_COMMIT_REF_NAME = "master" ]; then echo "latest"; else echo "dev"; fi;)
  - echo "$IMAGE_TAG"
  
stages:
  - build
  - coverage
  - push

build-common:
  stage: build
  coverage: '/Total\s*\|\s*(\d+\.?\d+)/'
  script:
    - docker build --rm=false --no-cache --pull -t "$DOCKER_REGISTRY_IMAGE:$IMAGE_TAG" .
  after_script:
    - docker ps -aq --filter "name=test-reports" | grep -aq . && docker stop test-reports && docker rm -fv test-reports
    - id=`docker images --filter "label=unit-test" -q`
    - docker container create --name test-reports $id
    - docker cp test-reports:/app/HueShift2Tests/unit_test_report.xml .
    - docker cp test-reports:/app/HueShift2Tests/coverage.xml .
    - docker rm test-reports
  artifacts:
    when: always
    paths:
      - ./unit_test_report.xml
      - ./coverage.xml
    reports:
      junit:
        - ./unit_test_report.xml
  tags:
    - docker

coverage-check:
  stage: coverage
  script:
    - bash check_coverage.sh
  tags:
    - rpi

push-common:
  stage: push
  dependencies:
    - build-common
  script:
    - docker push "$DOCKER_REGISTRY_IMAGE:$IMAGE_TAG"
  tags:
    - docker
